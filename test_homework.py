

def test_greeting():
    """
    Задание:
    Написать программу для вывода на экран приветствия на экран.
    """
    name = "Анна"
    age = 25
    # TODO Сформируйте нужную строку
    output = ""
    # Проверяем результат
    assert output == "Привет, Анна! Тебе 25 лет."


def test_rectangle():
    """
    Задание:
    Написать программу для рассчета длины и ширины прямоугольника через его периметр и площадь.
    """
    a = 10
    b = 20

    # TODO сосчитайте периметр
    perimeter = 0
    assert perimeter == 60

    # TODO сосчитайте площадь
    area = 0
    assert area == 200


def test_circle():
    """
    Задание:
    Написать программу для расчета длины и площади круга через его радиус.
    Подсказка: для расчета необходимо применить константу PI
    """
    r = 23
    # TODO сосчитайте площадь
    area = 0
    assert area == 1661.9025137490005

    # TODO сосчитайте длину окружности
    length = 0
    assert length == 144.51326206513048


def test_random_list():
    """
    Задание:
    Написать программу для создания списка из 10 случайных чисел от 1 до 100 и сортировки его по возрастанию.
    """

    # TODO создайте список
    l = []
    assert len(l) == 10
    assert l[0] < l[-1]


def test_unique_elements():
    """
    Задание:
    Написать программу для удаления из существующего списка все повторяющиеся элементы
    """
    l = [1, 2, 3, 4, 5, 5, 5, 6, 7, 8, 8, 9, 10, 10]
    # TODO удалите повторяющиеся элементы

    assert isinstance(l, list)
    assert len(l) == 10
    assert l == [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]


def test_dicts():
    """
    Задание:
    Написать программу в которой будет:
    1 - Словарь из двух списков.
    2 - Первый список используется как ключи, второй - как значения.
    3 - Все значения словаря выводятся на экран.
    Подсказка: используй встроенную функцию zip.
    """
    first = ["a", "b", "c", "d", "e"]
    second = [1, 2, 3, 4, 5]
    # TODO создайте словарь
    d = {}

    assert isinstance(d, dict)
    assert len(d) == 5
